text	segment	'code'
	assume	CS:text,DS:text
	org	100h
Begin:	jmp	Install	; Загрузка резидента в память
frequency 	equ 	0500h 	; Коэффициент деления
Old09Handler 	dd ?       ; резервируем место для адреса оригинального обработчика прерывания 09h
Old1CHandler 	dd ?       ; резервируем место для адреса оригинального обработчика прерывания 1Ch
cnt 	 	db 0 		; счетчик звучания
prev		db 4 dup(0)	; коды предыдущих клавиш (последние 4 нажатия)
New09Handler	proc		; новый обработчик прерывания int09h
	jmp short cont
	dw 0deadh		;метка присутствия резидента в памяти
cont:	pushf			;заносим флаги в стек, поскольку iret в конце оригинального обработчика заберет один экземпляр флагов из стека
	call dword ptr CS:[Old09Handler]	; вызов оригинального обработчика
	cli			;запретить прерывания
	push ax			;сохранить регистры общего назначения
; Опрос клавиатуры
	mov ah,1		;ф-я проверки буфера клавиатуры
	int 16h			;проверить были ли новые нажатия
	jz beg3			;если не было, переход
	cmp al,0e8h		; если нажата не ш
	jnz beg2		; переход
	cmp cs:prev[3],0a7h	; если за три символа до этого была не "з"
	jnz beg2		; переход
	mov byte ptr cs:cnt,9 	; Взведение счетчика звуч.
beg2:	mov ah,cs:prev[2]	;сдвинуть
	mov cs:prev[3],ah	;последние три
	mov ah,cs:prev[1]	;нажатых кода
	mov cs:prev[2],ah	;клавиши
	mov ah,cs:prev[0]	;на одну
	mov cs:prev[1],ah	;позицию
	mov cs:prev[0],al	;запомнить предыдущий символ
beg3:	pop ax			;восстанавливаем регистры общего назначения
	sti			;разрешить прерывания
	iret			;выход из прерывания
endp


;обработчик таймера
New1CHandler	proc		; новый обработчик прерывания int1Ch
	pushf			;заносим флаги в стек, поскольку iret в конце оригинального обработчика заберет один экземпляр флагов из стека
	call dword	ptr	CS:[Old1CHandler]	; вызов оригинального обработчика
	cli			;запретить прерывания
	push ax			;сохранить регистры общего назначения
	cmp byte ptr cs:cnt,0 	; Проверка счетчика
	jnz muz1 	; Продолжение
	in al,61h 	; Чтение системного порта В
	and al,0fch 	; Запрещение звучания (биты 0 и 1)
	out 61h,al 	; Запись в системный порт В
	jmp muz2	; Выход, если флаг не взведен
muz1:			; Программирование делителя частоты 2 канала
	mov ax,frequency; Делитель частоты
	out 42h,al 	; Мл.байт частоты в канал 2 таймера
	xchg al,ah 	; поменять местами AH и AL
	out 42h,al 	; Ст.байт частоты в канал 2 таймера
; Разрешение звучания
	in al,61h 	; Чтение системного порта В
	or al,3 	; Разрешение звучания (биты 0 и 1)
	out 61h,al 	; Запись в системный порт В
	dec cs:cnt ;уменьшить счетчик
muz2:	pop ax		;восстанавливаем регистры общего назначения
	sti		;разрешить прерывания
	iret		;выход из прерывания
endp
Install	proc		; загрузка резидента
	mov ax, 3509h	;ф-я получения адреса обработчика прерывания 9
	int 21h		;получить адрес обработчика
	mov dx,word ptr es:[bx+2]	;взять сигнатуру
	cmp dx,	0deadh	;если загружен
	jz unload      ;то выгрузить
	cli
	mov word ptr Old09Handler,BX	;сохранить вектор прерывания клавиатуры
	mov word ptr Old09Handler+2,ES
	mov ax,2509h	; SetVector
	mov dx,offset  New09Handler
	int 21h		;установить новый обработчик клавиатуры
	mov ax, 351Ch	;ф-я получения адреса обработчика прерывания 1С
	int 21h		;получить адрес обработчика
	mov word ptr Old1CHandler,BX	;сохранить вектор прерывания
	mov word ptr Old1CHandler+2,ES
	mov ax,251Ch	; SetVector
	mov dx,offset  New1CHandler
	int 21h		;установить новый обработчик таймера
	sti
	; сообщение об успехе
	lea dx,Success	;адрес строки
	mov ah,09h		;функция вывода строки на экран
	int 21h		;выводим на экран

	mov ax,3100h	; KeepProc
	mov dx,(Install-Begin+10Fh)/16; указываем системе сколько памяти в параграфах занимает наш резидент
	int 21h		; закончить, но остаться в памяти
unload:
;выгрузка
	;запретить звучание
	in al,61h 	; Чтение системного порта В
	and al,0fch 	; Запрещение звучания (биты 0 и 1)
	out 61h,al 	; Запись в системный порт В
	cli		; запретить прерывания
	mov ax,251ch	; функция установки вектора 21h
	lds dx,[es:Old1CHandler] ;в ds:dx адрес старого обработчика (Из копии в памяти!!!)
	int 21h		;возврашаем старый обработчик
	mov ax,2509h	; функция установки вектора 09h
	lds dx,[es:Old09Handler] ;в ds:dx адрес старого обработчика (Из копии в памяти!!!)
	int 21h		;возврашаем старый обработчик
	sti		;разрешить прерывания
	push es
	mov es,[es:2ch]	;сегмент окружения из PSP
	mov ah,49h	;функция освобождения блока памяти
	int 21h		;освободить сегмент окружения
	pop es		;es указывет на начало программы в памяти
	mov ah,49h	;функция освобождения блока памяти
	int 21h		;выгрузить программу
	push cs
	pop ds		;ds=cs
	lea dx,Unloaded	;адрес строки
	mov ah,09h		;функция вывода строки на экран
	int 21h		;выводим на экран
	mov ah,4ch		; стандартный выход из программы
	int 21h
endp
Success		db	10,13,'Program loaded',10,13,'$'
Unloaded	db	10,13,'Program unloaded',10,13,'$'
text	ends
end   Begin


