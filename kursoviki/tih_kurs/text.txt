В строках 1 – 4 мы прописываем все директивы. Определяем модель памяти, задаем начало сегмента и смещаем адрес кода. Со строки 6 начинается программа. 
Условно разбиваем программу на блоки, к которым будем переходить по меткам в зависимости от условия.
Блок "input" считывает нажатую клавишу и смотрит: 
1. если это клавиша enter, то переходим в блок "is_enter", в котором мы переводим каретку, чтобы отобразился переход на новую строку (в противно случае курсор перейдет в начало строки и новый ввод будет происходить поверх старой строчки). Из блока is_enter переходим обратно в блок input и ждем ввод с клавиатуры.
2. если нажатая клавиша escape, то переходим в блок "is_out", которая так же делает перевод каретки и выходит из программы
3. если это любой другой символ, то выводим его на экран 
Таким образом, символ нажатой клавиши после вывода его на экран будет храниться в регистре dl. 
Блок check смотрит, какую клавишу мы ввели. Если это tub, то выплниться процесс pisk proc, после чего выполнение программы перейдет к следующей строчке и мы перейдет в блок input. В обратном же случае, если это любая друга клавиша, мы сразу перейдет в блок ввода символа. 
Рассмотрим поподробнее работу процесса pisk. Для работы со звуком в ассембле нам необходимо включить динамик. Это делает путем установления первых двух битов в единицы. Далее нам нужно задать высоту звука и его продолжительность. После завершения работы с динамиком нам необходимо его выключить.
Выход из программы осуществляется только путем нажатия клавиши escape.

